// Copyright (c) 2015, the Fletch project authors. Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE.md file.

service ConformanceService {
  int32 getAge(Person* person);
  int32 getBoxedAge(PersonBox* box);
  AgeStats* getAgeStats(Person* person);
  AgeStats* createAgeStats(int32 averageAge, int32 sum);
  Person* createPerson(int32 children);
  Node* createNode(int32 depth);
  int32 count(Person* person);

  int32 depth(Node* node);
  void foo();
  int32 bar(Empty* empty);

  int32 ping();

  TableFlip* flipTable(TableFlip* flip);
  InternalFields* internalize(InternalFields* internalFields);
}

struct Empty { }

struct AgeStats {
  int32 averageAge;
  int32 sum;
}

struct Person {
  String name;
  int32 age;
  List<Person> children;
}

struct Large {
  int32 y;
  Small s;
}

struct Small {
  int32 x;
}

struct PersonBox {
  Person* person;
}

struct Node {
  union {
    int32 num;
    bool cond;
    Cons cons;
    void nil;
  }
}

struct Cons {
  Node* fst;
  Node* snd;
}

struct TableFlip {
  String flip;
}

struct InternalFields {
  int32 offset;
  String segment;
}
