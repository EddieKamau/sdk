# Copyright (c) 2015, the Fletch project authors. Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE.md file.

# SCons build description file.
# See http://scons.org/.

import os
from os.path import join

# Import the compilation context from the calling SConstruct file.
Import("context")

# Setup shorthands.
env = context.environment
config = context.configuration
files = context.files["echo_service_api_test"]["echo"]
objc_files = context.files["echo_service_api_test"]["objc_echo"]

# Filter out header files from lists.
def FilterSourceFiles(files):
  return [ f for f in files if not f.endswith(".h") ]

# Setup compilation of the test program.
test_env = env.Clone()
test_env.Append(CPPDEFINES=["TESTING"])
test_objects = [ test_env.Object(file) for file in FilterSourceFiles(files) ]

objc_test_objects = []
if env["os"] == "macos":
  objc_test_objects = [ test_env.Object(file)
                        for file in FilterSourceFiles(objc_files) ]

# Let the result of building a variant be the list of targets
# including all C++ tests.
result = { "objects": test_objects, "objc_objects": objc_test_objects }
Return("result")
