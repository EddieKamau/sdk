// Copyright (c) 2015, the Fletch project authors. Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE.md file.

// Reusable sliding-window view of a list of nodes.  The window is represented
// as a cyclic buffer so that sliding by N, where N is less than the buffer
// length, can be implemented as shifting the buffer offset by N and populating
// N items.
node SlidingWindow {
  // Cyclic buffer for the sliding window of nodes.
  List<Node> window;

  // Offset of the window start from the original list.
  uint32 startOffset;

  // Offset of the first sliding-window item in the window.
  uint16 windowOffset;

  // Number of items known to be in the list.
  uint32 minimumCount;

  // Number of items in the list. A negative value denotes an unknown size.
  int32 maximumCount;

  // Event to update the sliding-window display range.
  void display(uint32 start, uint32 end);

  // Event to toggle an item in the window.
  void toggle(uint32 index);

}
