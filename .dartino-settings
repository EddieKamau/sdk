// Copyright (c) 2015, the Dartino project authors. Please see the AUTHORS file",
// for details. All rights reserved. Use of this source code is governed by a",
// BSD-style license that can be found in the LICENSE.md file."],

// The settings in this file are used during automated testing.
// If you are considering adding settings to this file in order
// to change the default behavior of the system you should reconsider.
// There should only be settings in this file to *overwrite* the
// defaults.
{

  // Location of the packages configuration file (a relative URI)
  "packages": ".packages",

  // A list of strings that are passed to the compiler
  "compiler_options": [
  ],

  // Values of of dart compile-time constants, that is, the values of
  // expression on these forms:
  //
  //   const bool.fromEnvironment("<name>")
  //   const int.fromEnvironment("<name>")
  //   const String.fromEnvironment("<name>")
  //
  "constants": {
  },

  // A list of strings that are passed to the Dartino embedder.
  //
  // Currently recognized options:
  // - 'enable_debugger': when enabled the device will wait for the
  //   debugger on the uart-connection before running the program.
  //   all stdout will go to the debugger.
  // - 'uart_print_interceptor': when enabled all stdout will be copied to
  //   the uart.
  // Notice 'enable_debugger' and 'uart_print_interceptor' do not work together.
  "embedder_options": [
    // "enable_debugger"
    "uart_print_interceptor"
  ],

  // Address of the target device on which to run the Dartino VMs.
  // If null then vms are started directly on localhost.
  "device_address": null,

  // Type of device to compile for. Currently the available types are:
  // "mobile" and "embedded".
  "device_type": "mobile",

  // The device ID when running on an embedded device. The following
  // devices are supported:
  //   stm32f746g-discovery (STM32F746G Discovery)
  //   stm32f411re-nucleo (STM32F411RE Nucleo)
  "device": "stm32f746g-discovery",

  // Support for incremental compilation, one of "none", "production", or
  // "experimental".
  "incremental_mode": "production"
}
