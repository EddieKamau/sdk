# Copyright (c) 2015, the Dartino project authors. Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE.md file.

BOARD="stm32f7discovery"
STLINK="stlink-v2-1"
ROOT="$(dirname $(dirname $(dirname $(follow_links $0))))"
OS="`uname`"
case $OS in
  'Linux')
    OS='linux'
    ;;
  'Darwin')
    OS='mac'
    ;;
  *)
    echo "Unsupported OS $OS"
    exit 1
    ;;
esac

while [ $# -gt ${EXPECTED_ARGS} ]; do
  case $1 in
    --disco | -d)
      BOARD="stm32f7discovery"
      STLINK="stlink-v2-1"
      shift
      ;;
    --nucleo | -n)
      BOARD="st_nucleo_f4"
      STLINK="stlink-v2-1"
      shift
      ;;
    --board | -b)
      BOARD="$2"
      shift 2
      ;;
    --link | -l)
      STLINK="$2"
      shift 2
      ;;
    --openocd | -o)
      OPENOCDHOME=$2
      shift 2
      ;;
    --gdb-embedded)
      T=gcc-arm-embedded/bin/arm-none-eabi-gdb
      GDB="$ROOT/third_party/gcc-arm-embedded/$OS/$T"
      shift 1
      ;;
    --gdb)
      GDB=$2
      shift 2
      ;;
    --reset)
      GDB_COMMAND="mon reset halt"
      shift 1
      ;;
    --attach)
      GDB_COMMAND=
      shift 1
      ;;
    --help | -h)
      echo "Options: --disco or -d    Use discovery f7 board configuration"
      echo "         --nucleo or -n   Use nucleo F4 board configuration"
      echo "         --board or -b    Manually set board name"
      echo "         --link or -l     Manually set debug link type"
      echo "         --openocd or -o  Set openocd home directory"
      echo "         --attach         Attach gdb to running binary"
      echo "         --reset          Attach gdb and reset the running binary"
      echo "         --gdb-embedded   Use gdb from third_party/gcc-arm-embedded"
      echo "         --gdb            Set gdb executable"
      echo "         --help or -h     Print this message"
      echo "         --help or -h     Print this message"
      echo ""
      echo "The options --attach, --reset, --gdb-embedded and --gdb are "
      echo "only relevant for debugging."
      exit 0
      ;;
    *)
      echo "Unknown option $1"
      exit 1
      ;;
  esac
done

if [ -z "$OPENOCDHOME" ]; then
  OPENOCDHOME="$ROOT/third_party/openocd/$OS/openocd/"
fi

if [ -z "$GDB" ]; then
  GDB="$ROOT/third_party/gcc-arm-embedded/$OS/$T/gcc-arm-embedded/bin/arm-none-eabi-gdb"
fi
